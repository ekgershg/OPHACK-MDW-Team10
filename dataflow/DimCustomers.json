{
	"name": "DimCustomers",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "trgCustomersWithAddresses",
						"type": "DatasetReference"
					},
					"name": "Customers"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "SynapseDimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomers",
						"type": "DatasetReference"
					},
					"name": "Team10Synapse"
				}
			],
			"transformations": [
				{
					"name": "DimCustomers"
				},
				{
					"name": "DimCustomer"
				},
				{
					"name": "CustomerSK"
				},
				{
					"name": "Customer"
				},
				{
					"name": "CheckRows"
				}
			],
			"script": "source(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate_Cust as date,\n\t\tUpdatedDate_Cust as date,\n\t\tAddressID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate_Add as date,\n\t\tUpdatedDate_Add as date,\n\t\tSource as integer,\n\t\tUID as string,\n\t\tcrDate as string,\n\t\tupDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Customers\nsource(output(\n\t\tCustomerSK as integer,\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tRecordStartDate as date,\n\t\tRecordEndDate as date,\n\t\tActiveFlag as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SynapseDimCustomer\nCustomers select(mapColumn(\n\t\tCustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimCustomers\nDimCustomers derive(ActiveFlag = true(),\n\t\tRecordStartDate = currentDate(),\n\t\tRecordEndDate = ERROR_FUNCTION('')) ~> DimCustomer\nDimCustomer keyGenerate(output(CustomerSK as long),\n\tstartAt: 1L) ~> CustomerSK\nSynapseDimCustomer, DimCustomer lookup(SynapseDimCustomer@CustomerID == DimCustomers@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Customer\nCustomer split(isUpsert(),\n\tdisjoint: false) ~> CheckRows@(ExistingRows, NewRows)\nCheckRows@ExistingRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CustomerID'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tCustomerSK,\n\t\tCustomerID = CheckRows@ExistingRows@CustomerID,\n\t\tLastName = CheckRows@ExistingRows@LastName,\n\t\tFirstName = CheckRows@ExistingRows@FirstName,\n\t\tAddressLine1 = CheckRows@ExistingRows@AddressLine1,\n\t\tAddressLine2 = CheckRows@ExistingRows@AddressLine2,\n\t\tCity = CheckRows@ExistingRows@City,\n\t\tState = CheckRows@ExistingRows@State,\n\t\tZipCode = CheckRows@ExistingRows@ZipCode,\n\t\tPhoneNumber = CheckRows@ExistingRows@PhoneNumber,\n\t\tRecordStartDate = CheckRows@ExistingRows@RecordStartDate,\n\t\tRecordEndDate,\n\t\tActiveFlag = CheckRows@ExistingRows@ActiveFlag,\n\t\tCustomerID = CheckRows@ExistingRows@CustomerID,\n\t\tLastName = CheckRows@ExistingRows@LastName,\n\t\tFirstName = CheckRows@ExistingRows@FirstName,\n\t\tPhoneNumber = CheckRows@ExistingRows@PhoneNumber,\n\t\tAddressLine1 = CheckRows@ExistingRows@AddressLine1,\n\t\tAddressLine2 = CheckRows@ExistingRows@AddressLine2,\n\t\tCity = CheckRows@ExistingRows@City,\n\t\tState = CheckRows@ExistingRows@State,\n\t\tZipCode = CheckRows@ExistingRows@ZipCode,\n\t\tActiveFlag = CheckRows@ExistingRows@ActiveFlag,\n\t\tRecordStartDate = CheckRows@ExistingRows@RecordStartDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Team10Synapse"
		}
	}
}